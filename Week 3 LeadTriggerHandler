public with sharing class LeadTriggerHandler {

    public static void handleAfterInsert(List<Lead> newList){
        List<Task> taskList = new List<Task>();

        //Week 3 Demo: bulkify this code
        for (Lead L : newList) {
            Task t = new Task();
            t.Priority = 'Normal';
            t.Type = 'Call'; 
            t.Status = 'Not Started';
            t.Subject = 'Follow up on '+L.ProductInterest__c;
            t.WhatId = L.Id;
            t.Description = 'Please follow up with this new Lead';
            taskList.add(t);
        }
        insert taskList;
    }

    public static void handleAfterUpdate(List<Lead> newList, List<Lead> oldList){
        
        List<Task> taskList = new List<Task>();

        //Week 3 Demo: bulkify this code
        for (Lead L : newList) {
            for(Lead Ld : oldList){
                if(L.ProductInterest__c != Ld.ProductInterest__c ){
                    Task t = new Task();
                    t.Priority = 'Normal';
                    t.Type = 'Call'; 
                    t.Status = 'Not Started';
                    t.Subject = 'Follow up on '+L.ProductInterest__c;
                    t.WhatId = Ld.Id;
                    t.Description = 'Please follow up with this new Lead';
                    taskList.add(t);
                    }
                }
            }
        insert taskList;
    }
}
