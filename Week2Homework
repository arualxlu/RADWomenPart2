public class WeekTwoHomework {

/*A method that includes a query for a List of contacts and returns the Account Name 
    and Industry as well.  Use a loop to print the name of each Contact’s Account Name 
    with System.debug.*/
   public static void contactAcctIndustry () {

        // Let's query some Opportunities and bring down account information as well
        List < Contact > contactsAcctsInd = [SELECT ID, Name, AccountId, Account.Name, 
                                                Account.Industry FROM Contact];
Integer c = [select count() from contact];

for (Integer i = 0; i<(c-1); i++)
{
     //   System.debug('The contact is: '+contactsAcctsInd[i]);
        System.debug('The contact Account Name is: '+contactsAcctsInd[i].Account.Name+
                     'in Industry: '+contactsAcctsInd[i].Account.Industry);
}

    }
//A method that includes a query for a list of Accounts AND includes all their closed-won opportunities in a subquery. 
//Use a loop to print out the name of each Account’s opportunity with System.debug.
    public static void acctWonOpptys () {
        //List < Opportunity> wonOpptys = [SELECT ID, Name, StageName, Amount, AccountId, Account.Name FROM Opportunity
         //                               WHERE stagename = 'Closed Won'];
        List < Account > wonOpptys = [SELECT ID, Name, (SELECT Name, StageName, Amount FROM
                                         Opportunities where stagename = 'Closed Won')
                                     FROM Account];
         
        Integer c = [select count() from opportunity where stagename = 'Closed Won'];
        
for (Integer i = 0; i<(c-1); i++)
{ 
    for (Account acc:wonOpptys){
    for (Opportunity opp:acc.Opportunities)
    {
             System.debug('The Opportunity name is: '+opp[i].Name);
}
    }
    	}
    }
    
//A method that queries for Opportunity records that returns results in a map format.
	public static void opptyMap()
    {
        Map< ID, Opportunity > opptyRecMap = new Map <ID, Opportunity>
            ([SELECT ID, Name from Opportunity]);
       // Integer c = [select count() from opportunity] ;
       // for (Integer i = 0; i<(c-1); i++)
            System.debug('Opportunity List: '+opptyRecMap);
    }
//An aggregate results query that returns an integer equal to the total number of open opportunities in your org.

    public static void openOpptyAmt()
    {
        List<AggregateResult> openAmt = [SELECT sum(amount) total from Opportunity WHERE IsClosed = false];
        for (AggregateResult ar: openAmt)
        { System.debug('Open opptys total'+ar.get('total'));}
    }
    
}

